apiVersion: v1
kind: Template
labels:
    template: jira-persistent-template
metadata:
  creationTimestamp: null
  name: jira-persistent-template
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${APPLICATION_VOLUME_CAPACITY}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${DATABASE_VOLUME_CAPACITY}
- apiVersion: v1
  kind: Service
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: mysql 
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
        name: ${DATABASE_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
      name: ${NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      name: ${NAME}
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    generation: 1
    name: ${DATABASE_SERVICE_NAME} 
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: ${DATABASE_SERVICE_NAME}:latest
      generation: null
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    generation: 1
    name: ${NAME} 
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: ${NAME}:latest
      generation: null
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    generation: 2
    name: rhel7
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: registry.access.redhat.com/rhel
      generation: 2
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    generation: 2
    name: rhel7.2
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: registry.access.redhat.com/rhel7.2
      generation: 2
      importPolicy: {}
      name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 3
    name: ${DATABASE_SERVICE_NAME} 
  spec:
    replicas: 1
    selector:
        name: ${DATABASE_SERVICE_NAME}
    strategy:
      type: Recreate 
    template:
      metadata:
        labels:
          name: ${DATABASE_SERVICE_NAME}
        name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: ${MYSQL_USER} 
          - name: MYSQL_PASSWORD
            value: ${MYSQL_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${MYSQL_DATABASE}
          - name: MYSQL_ROOT_PASSWORD
            value: ${MYSQL_ROOT_PASSWORD}
          image: ' ' 
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${DATABASE_SERVICE_NAME}-data
        volumes:
        - name: ${DATABASE_SERVICE_NAME}-data
          persistentVolumeClaim:
            claimName: ${DATABASE_SERVICE_NAME}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: ${DATABASE_SERVICE_NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations: null
    generation: 7
    name: ${NAME} 
  spec:
    replicas: 1
    selector:
        name: ${NAME}
    strategy:
      type: Recreate 
    template:
      metadata:
        creationTimestamp: null
        labels:
            name: ${NAME}
        name: ${NAME}
      spec:
        containers:
        - image: ' ' 
          name: jira
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
            - mountPath: /var/atlassian/jira/ 
              name: ${NAME}-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: ${NAME}-data
          persistentVolumeClaim:
            claimName: ${NAME}
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - jira
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
      type: ImageChange
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations: null
    creationTimestamp: null
    name: ${DATABASE_SERVICE_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${DATABASE_SERVICE_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: "5.6"
      git:
        uri: http://github.com/jcpowermac/mysql-container
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile.rhel7
        from:
          kind: ImageStreamTag
          name: rhel7.2:latest
      type: Docker
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET} 
      type: GitHub
    - type: ConfigChange
    - type: ImageChange
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      name: ${NAME} 
    name: ${NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/jcpowermac/aos-atlassian-jira
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: rhel7:latest
      type: Docker
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET} 
      type: GitHub
    - type: ConfigChange
    - type: ImageChange
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: jira 
- description: The exposed hostname that will route to the Jira service, if left
    blank a value will be defaulted.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: mysql
- description: Username for MySQL user that will be used for accessing the database.
  displayName: MySQL Connection Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: MYSQL_USER
  required: true
  value: jira
- description: Password for the MySQL connection user.
  displayName: MySQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_PASSWORD
  required: true
- description: Name of the MySQL database accessed.
  displayName: MySQL Database Name
  name: MYSQL_DATABASE
  required: true
  value: jiradb 
- description: Password for the administration account for MySQL.
  displayName: MySQL root Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: MYSQL_ROOT_PASSWORD
  required: true
- description: Volume space available for Database data, e.g. 512Mi, 2Gi.
  displayName: Database Volume Capacity
  name: DATABASE_VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Volume space available for Application data, e.g. 512Mi, 2Gi.
  displayName: Application Volume Capacity
  name: APPLICATION_VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: A secret string used to configure the GitHub webhook.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
